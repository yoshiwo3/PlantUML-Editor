// PlantUML „Ç®„Éá„Ç£„Çø„Éº „ÇØ„Ç§„ÉÉ„ÇØÂãï‰ΩúÁ¢∫Ë™ç„Çπ„ÇØ„É™„Éó„Éà (ES ModulesÁâà)
import { chromium } from 'playwright';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function runValidation() {
    console.log('üöÄ PlantUML „Ç®„Éá„Ç£„Çø„ÉºÂãï‰ΩúÁ¢∫Ë™ç„ÇíÈñãÂßã„Åó„Åæ„Åô...');
    
    const browser = await chromium.launch({ 
        headless: false, // „Éò„ÉÉ„Éâ„É¨„Çπ„É¢„Éº„Éâ„ÇíÁÑ°Âäπ„Å´„Åó„Å¶„Éñ„É©„Ç¶„Ç∂„ÇíË°®Á§∫
        slowMo: 300 // Êìç‰Ωú„ÇíË¶ñË¶öÁöÑ„Å´Á¢∫Ë™ç„Åô„Çã„Åü„ÇÅ„ÅÆ„Çπ„É≠„ÉºÂÜçÁîü
    });
    
    const context = await browser.newContext();
    const page = await context.newPage();
    
    try {
        // „Ç®„É©„ÉºÁõ£Ë¶ñ„ÇíË®≠ÂÆö
        const consoleErrors = [];
        const pageErrors = [];
        
        page.on('console', msg => {
            if (msg.type() === 'error') {
                consoleErrors.push(msg.text());
                console.log('‚ùå „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº:', msg.text());
            }
        });
        
        page.on('pageerror', error => {
            pageErrors.push(error.message);
            console.log('üí• „Éö„Éº„Ç∏„Ç®„É©„Éº:', error.message);
        });

        console.log('1Ô∏è‚É£ „É°„Ç§„É≥„Éö„Éº„Ç∏„Å´„Ç¢„ÇØ„Çª„Çπ‰∏≠...');
        
        // „É≠„Éº„Ç´„É´„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶Áõ¥Êé•Èñã„Åè
        const filePath = `file:///${__dirname.replace(/\\/g, '/')}/index.html`;
        console.log('   „Éö„Éº„Ç∏URL:', filePath);
        
        await page.goto(filePath);
        await page.waitForLoadState('networkidle');
        await page.waitForTimeout(3000); // Èï∑„ÇÅ„Å´ÂæÖÊ©ü

        console.log('2Ô∏è‚É£ Âü∫Êú¨Ë¶ÅÁ¥†„ÅÆÁ¢∫Ë™ç...');
        
        // „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´Á¢∫Ë™ç
        const title = await page.title();
        console.log('   „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´:', title);
        
        // „Ç¢„Éó„É™„Ç≥„É≥„ÉÜ„Éä„ÅÆÁ¢∫Ë™ç
        const appContainer = await page.$('.app-container');
        console.log('   „Ç¢„Éó„É™„Ç≥„É≥„ÉÜ„Éä:', appContainer ? '‚úÖ Áô∫Ë¶ã' : '‚ùå Ë¶ã„Å§„Åã„Çâ„Å™„ÅÑ');

        console.log('3Ô∏è‚É£ „Ç≠„É£„ÉÉ„Ç∑„É•„Éê„Çπ„ÉÜ„Ç£„É≥„Ç∞Á¢∫Ë™ç...');
        
        // app.js„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„Çø„Ç∞Á¢∫Ë™ç
        const appScript = await page.$('script[src*="app.js"]');
        if (appScript) {
            const src = await appScript.getAttribute('src');
            console.log('   app.js „Çπ„ÇØ„É™„Éó„Éà:', src);
            if (src && src.includes('?v=')) {
                console.log('‚úÖ „Ç≠„É£„ÉÉ„Ç∑„É•„Éê„Çπ„ÉÜ„Ç£„É≥„Ç∞ „Éë„É©„É°„Éº„Çø„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åó„Åü');
            } else {
                console.log('‚ö†Ô∏è „Ç≠„É£„ÉÉ„Ç∑„É•„Éê„Çπ„ÉÜ„Ç£„É≥„Ç∞ „Éë„É©„É°„Éº„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
            }
        } else {
            console.log('‚ùå app.js „Çπ„ÇØ„É™„Éó„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }

        console.log('4Ô∏è‚É£ JavaScriptÂÆüË°åÁí∞Â¢ÉÁ¢∫Ë™ç...');
        
        // „Ç∞„É≠„Éº„Éê„É´„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆÁ¢∫Ë™ç
        const globalCheck = await page.evaluate(() => {
            const globals = {};
            
            // ‰∏ªË¶Å„Å™„Ç∞„É≠„Éº„Éê„É´„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çí„ÉÅ„Çß„ÉÉ„ÇØ
            globals.hasPlantUMLEditor = typeof window.PlantUMLEditor !== 'undefined';
            globals.hasPlantUMLEditorInstance = typeof window.plantUMLEditor !== 'undefined';
            globals.hasApp = typeof window.app !== 'undefined';
            
            // DOM„ÅÆÂü∫Êú¨Ë¶ÅÁ¥†„Çí„ÉÅ„Çß„ÉÉ„ÇØ
            globals.hasAppContainer = !!document.querySelector('.app-container');
            globals.hasActorGrid = !!document.querySelector('.actor-grid');
            globals.hasCodeEditor = !!document.querySelector('#plantuml-code');
            
            return globals;
        });
        
        console.log('   JavaScriptÂÆüË°åÁí∞Â¢É:');
        Object.entries(globalCheck).forEach(([key, value]) => {
            console.log(`     ${key}: ${value ? '‚úÖ' : '‚ùå'}`);
        });

        console.log('5Ô∏è‚É£ getCurrentActors„É°„ÇΩ„ÉÉ„Éâ„ÉÜ„Çπ„Éà...');
        
        // Â∞ë„ÅóÂæÖ„Å£„Å¶„Åã„ÇâÂÜçË©¶Ë°åÔºàÂàùÊúüÂåñÊôÇÈñì„ÇíËÄÉÊÖÆÔºâ
        await page.waitForTimeout(2000);
        
        const getCurrentActorsResult = await page.evaluate(() => {
            try {
                // „Ç®„Éá„Ç£„Çø„Éº„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÊé¢„Åô
                let editor = null;
                const searchResults = {};
                
                // 1. Êó¢Áü•„ÅÆ„Ç∞„É≠„Éº„Éê„É´Â§âÊï∞„Çí„ÉÅ„Çß„ÉÉ„ÇØ
                if (window.plantUMLEditor) {
                    editor = window.plantUMLEditor;
                    searchResults.foundAt = 'window.plantUMLEditor';
                } else if (window.app) {
                    editor = window.app;
                    searchResults.foundAt = 'window.app';
                }
                
                // 2. „Ç∞„É≠„Éº„Éê„É´„Çπ„Ç≥„Éº„Éó„ÇíÊ§úÁ¥¢
                if (!editor) {
                    for (let prop in window) {
                        if (window[prop] && typeof window[prop] === 'object' && 
                            typeof window[prop].getCurrentActors === 'function') {
                            editor = window[prop];
                            searchResults.foundAt = `window.${prop}`;
                            break;
                        }
                    }
                }
                
                if (!editor) {
                    return { 
                        success: false, 
                        error: '„Ç®„Éá„Ç£„Çø„Éº„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì',
                        searchResults
                    };
                }

                if (typeof editor.getCurrentActors !== 'function') {
                    return { 
                        success: false, 
                        error: 'getCurrentActors„É°„ÇΩ„ÉÉ„Éâ„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì',
                        searchResults,
                        editorType: typeof editor,
                        editorKeys: Object.keys(editor).slice(0, 10) // ÊúÄÂàù„ÅÆ10ÂÄã„ÅÆ„Ç≠„Éº
                    };
                }

                const actors = editor.getCurrentActors();
                return {
                    success: true,
                    searchResults,
                    type: typeof actors,
                    isArray: Array.isArray(actors),
                    isSet: actors && typeof actors.size === 'number',
                    length: Array.isArray(actors) ? actors.length : (actors && actors.size) || 0,
                    value: Array.isArray(actors) ? actors : Array.from(actors || [])
                };
            } catch (error) {
                return { success: false, error: error.message, stack: error.stack };
            }
        });

        if (getCurrentActorsResult.success) {
            console.log('‚úÖ getCurrentActors„É°„ÇΩ„ÉÉ„Éâ„ÉÜ„Çπ„ÉàÊàêÂäü');
            console.log(`   Áô∫Ë¶ãÂ†¥ÊâÄ: ${getCurrentActorsResult.searchResults.foundAt}`);
            console.log(`   Êàª„ÇäÂÄ§„ÅÆÂûã: ${getCurrentActorsResult.type}`);
            console.log(`   Ë¶ÅÁ¥†Êï∞: ${getCurrentActorsResult.length}`);
            console.log(`   ÂÄ§: [${getCurrentActorsResult.value.join(', ')}]`);
        } else {
            console.log('‚ùå getCurrentActors„É°„ÇΩ„ÉÉ„Éâ„ÉÜ„Çπ„ÉàÂ§±Êïó:', getCurrentActorsResult.error);
            if (getCurrentActorsResult.searchResults) {
                console.log('   Ê§úÁ¥¢ÁµêÊûú:', getCurrentActorsResult.searchResults);
            }
            if (getCurrentActorsResult.editorKeys) {
                console.log('   „Ç®„Éá„Ç£„Çø„Éº„ÅÆ„Ç≠„Éº:', getCurrentActorsResult.editorKeys);
            }
        }

        console.log('6Ô∏è‚É£ „Ç¢„ÇØ„Çø„ÉºÈÅ∏Êäû„ÉÜ„Çπ„Éà...');
        
        // „Ç¢„ÇØ„Çø„Éº„Éú„Çø„É≥„ÅÆÁ¢∫Ë™ç„Å®„ÇØ„É™„ÉÉ„ÇØ
        const actorButtons = await page.$$('.actor-btn[data-actor]');
        console.log(`   „Ç¢„ÇØ„Çø„Éº„Éú„Çø„É≥Êï∞: ${actorButtons.length}`);
        
        if (actorButtons.length > 0) {
            // ÊúÄÂàù„ÅÆ2„Å§„ÅÆ„Ç¢„ÇØ„Çø„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
            for (let i = 0; i < Math.min(2, actorButtons.length); i++) {
                const actorName = await actorButtons[i].getAttribute('data-actor');
                console.log(`   "${actorName}" „Ç¢„ÇØ„Çø„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ‰∏≠...`);
                await actorButtons[i].click();
                await page.waitForTimeout(300);
            }
            
            // „Ç¢„ÇØ„Çø„ÉºÈÅ∏ÊäûÂæå„ÅÆÁä∂ÊÖãÁ¢∫Ë™ç
            await page.waitForTimeout(500);
            const afterClickResult = await page.evaluate(() => {
                // „Ç®„Éá„Ç£„Çø„Éº„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÂÜçÊ§úÁ¥¢
                let editor = null;
                if (window.plantUMLEditor) {
                    editor = window.plantUMLEditor;
                } else if (window.app) {
                    editor = window.app;
                } else {
                    for (let prop in window) {
                        if (window[prop] && typeof window[prop] === 'object' && 
                            typeof window[prop].getCurrentActors === 'function') {
                            editor = window[prop];
                            break;
                        }
                    }
                }
                
                if (editor && typeof editor.getCurrentActors === 'function') {
                    const actors = editor.getCurrentActors();
                    return {
                        success: true,
                        length: Array.isArray(actors) ? actors.length : (actors && actors.size) || 0,
                        value: Array.isArray(actors) ? actors : Array.from(actors || [])
                    };
                }
                return { success: false, length: 0, value: [] };
            });
            
            if (afterClickResult.success) {
                console.log(`   ÈÅ∏ÊäûÂæå„ÅÆ„Ç¢„ÇØ„Çø„ÉºÊï∞: ${afterClickResult.length}`);
                console.log(`   ÈÅ∏ÊäûÊ∏à„Åø„Ç¢„ÇØ„Çø„Éº: [${afterClickResult.value.join(', ')}]`);
                
                if (afterClickResult.length > 0) {
                    console.log('‚úÖ „Ç¢„ÇØ„Çø„ÉºÈÅ∏Êäû„ÉÜ„Çπ„ÉàÊàêÂäü');
                } else {
                    console.log('‚ö†Ô∏è „Ç¢„ÇØ„Çø„Éº„ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô');
                }
            } else {
                console.log('‚ùå „Ç¢„ÇØ„Çø„ÉºÈÅ∏ÊäûÂæå„ÅÆÁä∂ÊÖãÁ¢∫Ë™ç„Å´Â§±Êïó');
            }
            
            // UI‰∏ä„ÅÆÈÅ∏ÊäûÁä∂ÊÖã„ÇÇÁ¢∫Ë™ç
            const uiActors = await page.$$eval('.actor-chips .actor-chip', chips => 
                chips.map(chip => chip.textContent.replace('√ó', '').trim())
            );
            console.log(`   UI‰∏ä„ÅÆÈÅ∏Êäû„Ç¢„ÇØ„Çø„Éº: [${uiActors.join(', ')}]`);
        }

        console.log('7Ô∏è‚É£ UIË¶ÅÁ¥†Á¢∫Ë™ç...');
        
        // ‰∏ªË¶Å„Å™UIË¶ÅÁ¥†„ÅÆÂ≠òÂú®Á¢∫Ë™ç
        const uiElements = {
            '„Ç¢„Éó„É™„Ç≥„É≥„ÉÜ„Éä': '.app-container',
            '„Ç¢„ÇØ„Çø„Éº„Ç∞„É™„ÉÉ„Éâ': '.actor-grid',
            'ÈÅ∏Êäû„Åï„Çå„Åü„Ç¢„ÇØ„Çø„Éº': '.selected-actors',
            'PlantUML„Ç≥„Éº„Éâ„Ç®„Éá„Ç£„Çø': '#plantuml-code',
            '„É´„Éº„Éó„Éì„É´„ÉÄ„Éº': '#loop-builder',
            '‰∏¶ÂàóÂá¶ÁêÜ„Éì„É´„ÉÄ„Éº': '#parallel-builder',
            '„Ç¢„ÇØ„Ç∑„Éß„É≥„Çø„Ç§„Éó„Çø„Éñ': '.action-type-tabs',
            '„Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº': '.status-bar'
        };
        
        for (const [name, selector] of Object.entries(uiElements)) {
            const element = await page.$(selector);
            console.log(`   ${name}: ${element ? '‚úÖ Â≠òÂú®' : '‚ùå Ë¶ã„Å§„Åã„Çâ„Å™„ÅÑ'}`);
        }

        console.log('8Ô∏è‚É£ „Çø„ÉñÂàá„ÇäÊõø„Åà„ÉÜ„Çπ„Éà...');
        
        // „É´„Éº„Éó„Çø„Éñ„ÅÆ„ÇØ„É™„ÉÉ„ÇØ„ÉÜ„Çπ„Éà
        const loopTab = await page.$('[data-type="loop"]');
        if (loopTab) {
            console.log('   „É´„Éº„Éó„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ‰∏≠...');
            await loopTab.click();
            await page.waitForTimeout(500);
            
            const loopBuilder = await page.$('#loop-builder');
            const isVisible = await loopBuilder?.isVisible();
            console.log(`   „É´„Éº„Éó„Éì„É´„ÉÄ„ÉºË°®Á§∫: ${isVisible ? '‚úÖ ÊàêÂäü' : '‚ùå Â§±Êïó'}`);
        } else {
            console.log('   ‚ùå „É´„Éº„Éó„Çø„Éñ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }

        // ‰∏¶ÂàóÂá¶ÁêÜ„Çø„Éñ„ÅÆ„ÇØ„É™„ÉÉ„ÇØ„ÉÜ„Çπ„Éà
        const parallelTab = await page.$('[data-type="parallel"]');
        if (parallelTab) {
            console.log('   ‰∏¶ÂàóÂá¶ÁêÜ„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ‰∏≠...');
            await parallelTab.click();
            await page.waitForTimeout(500);
            
            const parallelBuilder = await page.$('#parallel-builder');
            const isVisible = await parallelBuilder?.isVisible();
            console.log(`   ‰∏¶ÂàóÂá¶ÁêÜ„Éì„É´„ÉÄ„ÉºË°®Á§∫: ${isVisible ? '‚úÖ ÊàêÂäü' : '‚ùå Â§±Êïó'}`);
            
            // ‰∏¶Âàó„Éñ„É©„É≥„ÉÅ„ÅÆÁ¢∫Ë™ç
            const branches = await page.$$('.parallel-branch');
            console.log(`   ‰∏¶Âàó„Éñ„É©„É≥„ÉÅÊï∞: ${branches.length}`);
        } else {
            console.log('   ‚ùå ‰∏¶ÂàóÂá¶ÁêÜ„Çø„Éñ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }

        // „É°„ÉÉ„Çª„Éº„Ç∏„Çø„Éñ„Å´Êàª„Åô
        const messageTab = await page.$('[data-type="message"]');
        if (messageTab) {
            await messageTab.click();
            await page.waitForTimeout(300);
        }

        console.log('9Ô∏è‚É£ PlantUML„Ç≥„Éº„ÉâÁ¢∫Ë™ç...');
        
        const codeEditor = await page.$('#plantuml-code');
        if (codeEditor) {
            const code = await codeEditor.inputValue();
            console.log('   „Ç≥„Éº„Éâ„Ç®„Éá„Ç£„Çø„ÅÆÂÜÖÂÆπ:');
            console.log(`     ÊñáÂ≠óÊï∞: ${code.length}`);
            console.log(`     @startumlÂê´„ÇÄ: ${code.includes('@startuml') ? '‚úÖ' : '‚ùå'}`);
            console.log(`     @endumlÂê´„ÇÄ: ${code.includes('@enduml') ? '‚úÖ' : '‚ùå'}`);
            
            if (code.length > 20) {
                console.log('   ‚úÖ PlantUML„Ç≥„Éº„Éâ„ÅåÁîüÊàê„Åï„Çå„Å¶„ÅÑ„Åæ„Åô');
                console.log(`     „Éó„É¨„Éì„É•„Éº:\n${code.split('\n').slice(0, 5).join('\n')}${code.split('\n').length > 5 ? '\n     ...' : ''}`);
            } else {
                console.log('   ‚ö†Ô∏è PlantUML„Ç≥„Éº„Éâ„ÅåÁü≠„Åô„Åé„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô');
            }
        } else {
            console.log('   ‚ùå „Ç≥„Éº„Éâ„Ç®„Éá„Ç£„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }

        console.log('üîü Á∑èÂêàÁµêÊûú...');
        console.log(`   „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„ÉºÊï∞: ${consoleErrors.length}`);
        console.log(`   „Éö„Éº„Ç∏„Ç®„É©„ÉºÊï∞: ${pageErrors.length}`);
        
        if (consoleErrors.length === 0 && pageErrors.length === 0) {
            console.log('‚úÖ „Ç®„É©„Éº„ÅØÊ§úÂá∫„Åï„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü');
        } else {
            console.log('‚ö†Ô∏è „Ç®„É©„Éº„ÅåÊ§úÂá∫„Åï„Çå„Åæ„Åó„Åü:');
            consoleErrors.forEach((error, i) => console.log(`     „Ç≥„É≥„ÇΩ„Éº„É´${i+1}: ${error}`));
            pageErrors.forEach((error, i) => console.log(`     „Éö„Éº„Ç∏${i+1}: ${error}`));
        }

        // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„ÇíÊíÆÂΩ±
        console.log('üì∏ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„ÇíÊíÆÂΩ±‰∏≠...');
        const screenshotPath = path.join(__dirname, 'validation-screenshot.png');
        await page.screenshot({ 
            path: screenshotPath, 
            fullPage: true 
        });
        console.log(`‚úÖ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü: ${screenshotPath}`);

        // ÊúÄÁµÇÁöÑ„Å™Êé®Â•®‰∫ãÈ†Ö
        console.log('\nüìã Ê§úË®ºÁµêÊûú„Çµ„Éû„É™„Éº:');
        const issues = [];
        if (consoleErrors.length > 0) issues.push(`${consoleErrors.length}ÂÄã„ÅÆ„Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº`);
        if (pageErrors.length > 0) issues.push(`${pageErrors.length}ÂÄã„ÅÆ„Éö„Éº„Ç∏„Ç®„É©„Éº`);
        if (!getCurrentActorsResult.success) issues.push('getCurrentActors„É°„ÇΩ„ÉÉ„Éâ„ÅÆÂïèÈ°å');
        
        if (issues.length === 0) {
            console.log('üéâ „Åô„Åπ„Å¶„ÅÆ„ÉÜ„Çπ„Éà„ÅåÊàêÂäü„Åó„Åæ„Åó„ÅüÔºÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅØÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ');
        } else {
            console.log('‚ö†Ô∏è ‰ª•‰∏ã„ÅÆÂïèÈ°å„ÅåÊ§úÂá∫„Åï„Çå„Åæ„Åó„Åü:');
            issues.forEach((issue, i) => console.log(`   ${i+1}. ${issue}`));
        }

    } catch (error) {
        console.error('üí• „ÉÜ„Çπ„ÉàÂÆüË°å‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü:', error.message);
        console.error('„Çπ„Çø„ÉÉ„ÇØ„Éà„É¨„Éº„Çπ:', error.stack);
    } finally {
        console.log('\nüîö „ÉÜ„Çπ„ÉàÂÆå‰∫Ü„ÄÇ5ÁßíÂæå„Å´„Éñ„É©„Ç¶„Ç∂„ÇíÈñâ„Åò„Åæ„Åô...');
        await page.waitForTimeout(5000);
        await browser.close();
    }
}

// ÂÆüË°å
runValidation().catch(console.error);