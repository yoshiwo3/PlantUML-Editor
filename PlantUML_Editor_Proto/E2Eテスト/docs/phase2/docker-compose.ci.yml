version: '3.8'

services:
  # Playwrightテストランナー（CI最適化）
  playwright-ci:
    build:
      context: .
      dockerfile: Dockerfile.ci
      cache_from:
        - node:20.18.0-slim
        - mcr.microsoft.com/playwright:v1.48.0-focal
    image: plantuml-e2e-ci:latest
    container_name: plantuml-e2e-ci
    environment:
      - CI=true
      - DOCKER_ENV=true
      - NODE_ENV=test
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - FORCE_COLOR=1
      - TEST_RETRIES=${TEST_RETRIES:-2}
      - TEST_TIMEOUT=${TEST_TIMEOUT:-60000}
      - PARALLEL_WORKERS=${PARALLEL_WORKERS:-4}
    volumes:
      # テスト結果の永続化
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report
      - ./coverage:/app/coverage
      # スクリーンショット
      - ./screenshots:/app/screenshots
    networks:
      - plantuml-test-network
    depends_on:
      - plantuml-server
    command: npm run test:ci

  # PlantUMLアプリケーションサーバー
  plantuml-server:
    image: node:20.18.0-alpine
    container_name: plantuml-server-ci
    working_dir: /app
    volumes:
      - ../../../:/app:ro
    ports:
      - "8087:8087"
    environment:
      - NODE_ENV=test
      - PORT=8087
    networks:
      - plantuml-test-network
    command: >
      sh -c "
        cd PlantUML_Editor_Proto &&
        npx http-server -p 8087 -c-1 --cors
      "
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8087"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # テスト結果レポーター
  test-reporter:
    image: node:20.18.0-alpine
    container_name: test-reporter-ci
    working_dir: /app
    volumes:
      - ./test-results:/app/test-results:ro
      - ./playwright-report:/app/playwright-report
      - ./reports:/app/reports
    networks:
      - plantuml-test-network
    depends_on:
      playwright-ci:
        condition: service_completed_successfully
    command: >
      sh -c "
        echo 'Generating test reports...' &&
        if [ -d /app/test-results ]; then
          echo 'Test results found, processing...' &&
          ls -la /app/test-results/ &&
          echo 'Report generation complete'
        else
          echo 'No test results found'
        fi
      "

networks:
  plantuml-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  test-results:
  playwright-report:
  coverage:
  screenshots:
  reports: