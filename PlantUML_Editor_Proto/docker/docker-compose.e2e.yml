# PlantUML E2E Test Environment - Optimized Configuration
# Target: 4+ workers, 30-minute test execution, persistent volumes
version: '3.8'

services:
  # PlantUML Application Server
  plantuml-app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: plantuml-app-e2e
    ports:
      - "8086:8086"
    environment:
      - NODE_ENV=test
      - PORT=8086
      - LOG_LEVEL=warn
      - CORS_ORIGIN=*
    networks:
      - plantuml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health || wget --no-verbose --tries=1 --spider http://localhost:8086/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - app-logs:/app/logs
    restart: unless-stopped

  # E2E Test Runner - Optimized
  e2e-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile.e2e.optimized
    container_name: plantuml-e2e-runner
    depends_on:
      plantuml-app:
        condition: service_healthy
    environment:
      # Test configuration
      - BASE_URL=http://plantuml-app:8086
      - TEST_TIMEOUT=60000
      - WORKERS=4
      - HEADED=false
      - RETRY_ATTEMPTS=3
      
      # Playwright configuration
      - PLAYWRIGHT_BROWSERS_PATH=/opt/browsers
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
      
      # Performance optimization
      - NODE_OPTIONS=--max-old-space-size=4096 --max-semi-space-size=128
      - UV_THREADPOOL_SIZE=16
      
      # Test execution settings
      - TEST_REPORTER=json,html
      - TEST_OUTPUT_DIR=/app/test-results
      - SCREENSHOT_MODE=only-on-failure
      - VIDEO_MODE=retain-on-failure
      
      # Debug settings
      - DEBUG=playwright:*
      - DOCKER_ENV=true
    
    volumes:
      # Test artifacts (persistent)
      - test-results:/app/test-results
      - screenshots:/app/screenshots
      - videos:/app/videos
      - test-reports:/app/test-reports
      
      # Browser cache (performance optimization)
      - browser-cache:/opt/browsers:ro
      
      # Test configuration files
      - ../playwright.config.js:/app/playwright.config.js:ro
      - ../e2e:/app/e2e:ro
      
    networks:
      - plantuml-network
    
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 6G
          pids: 200
        reservations:
          cpus: '2'
          memory: 4G
    
    tmpfs:
      - /tmp:exec,size=512M
      - /var/tmp:exec,size=256M
    
    command: >
      bash -c "
        echo '==========================================' &&
        echo 'PlantUML E2E Test Environment Starting...' &&
        echo '==========================================' &&
        /verify-browsers.sh &&
        echo '' &&
        echo 'Waiting for application readiness...' &&
        timeout 60 bash -c 'until curl -f http://plantuml-app:8086/health > /dev/null 2>&1; do echo \"Waiting for app...\"; sleep 2; done' &&
        echo 'Application is ready!' &&
        echo '' &&
        echo 'Starting E2E test execution...' &&
        npm run test:e2e:docker
      "
    
    restart: "no"

  # Test Database (PostgreSQL for test data)
  test-db:
    image: postgres:15-alpine
    container_name: plantuml-test-db
    environment:
      - POSTGRES_DB=plantuml_test
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - test-db-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d:ro
    networks:
      - plantuml-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d plantuml_test"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Test Results Server (for viewing reports)
  test-results-server:
    image: nginx:alpine
    container_name: plantuml-test-results
    ports:
      - "8088:80"
    volumes:
      - test-results:/usr/share/nginx/html/results:ro
      - test-reports:/usr/share/nginx/html/reports:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - plantuml-network
    depends_on:
      - e2e-tests
    restart: unless-stopped

  # Performance Monitor
  performance-monitor:
    image: prom/prometheus:latest
    container_name: plantuml-performance-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
    networks:
      - plantuml-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

# Named Volumes for Data Persistence
volumes:
  # Test artifacts - persist between runs
  test-results:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './test-artifacts/results'

  screenshots:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './test-artifacts/screenshots'

  videos:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './test-artifacts/videos'

  test-reports:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './test-artifacts/reports'

  # Browser cache - performance optimization
  browser-cache:
    driver: local
    name: plantuml-browser-cache
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './browser-cache'

  # Database data
  test-db-data:
    driver: local
    name: plantuml-test-db

  # Application logs
  app-logs:
    driver: local
    name: plantuml-app-logs

  # Performance monitoring data
  prometheus-data:
    driver: local
    name: plantuml-prometheus

# Network Configuration
networks:
  plantuml-network:
    driver: bridge
    name: plantuml-test-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# Extension for performance optimization
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-restart-policy: &restart-policy
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 120s